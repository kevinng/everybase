# Generated by Django 3.0.5 on 2020-10-21 03:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('address_1', models.CharField(max_length=100)),
                ('address_2', models.CharField(blank=True, max_length=100, null=True)),
                ('address_3', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='addresses', related_query_name='addresses', to='common.Country')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='addresses', related_query_name='addresses', to='common.State')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='AddressType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('details_md', models.TextField(blank=True, null=True, verbose_name='Details in Markdown')),
                ('programmatic_key', models.CharField(blank=True, max_length=100, null=True)),
                ('programmatic_details_md', models.TextField(blank=True, null=True, verbose_name='Programmatic details in Markdown')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('company_name', models.CharField(max_length=100)),
                ('company_name_wo_postfix', models.CharField(max_length=100)),
                ('notes_md', models.TextField(blank=True, null=True, verbose_name='Notes in Markdown')),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='CompanyAddressType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('details_md', models.TextField(blank=True, null=True, verbose_name='Details in Markdown')),
                ('programmatic_key', models.CharField(blank=True, max_length=100, null=True)),
                ('programmatic_details_md', models.TextField(blank=True, null=True, verbose_name='Programmatic details in Markdown')),
            ],
            options={
                'verbose_name': 'Company-address type',
                'verbose_name_plural': 'Company-address types',
            },
        ),
        migrations.CreateModel(
            name='CompanyEmailType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('details_md', models.TextField(blank=True, null=True, verbose_name='Details in Markdown')),
                ('programmatic_key', models.CharField(blank=True, max_length=100, null=True)),
                ('programmatic_details_md', models.TextField(blank=True, null=True, verbose_name='Programmatic details in Markdown')),
            ],
            options={
                'verbose_name': 'Company-email type',
                'verbose_name_plural': 'Company-email types',
            },
        ),
        migrations.CreateModel(
            name='CompanyLinkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('details_md', models.TextField(blank=True, null=True, verbose_name='Details in Markdown')),
                ('programmatic_key', models.CharField(blank=True, max_length=100, null=True)),
                ('programmatic_details_md', models.TextField(blank=True, null=True, verbose_name='Programmatic details in Markdown')),
            ],
            options={
                'verbose_name': 'Company-link type',
                'verbose_name_plural': 'Company-link types',
            },
        ),
        migrations.CreateModel(
            name='CompanyPhoneNumberType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('details_md', models.TextField(blank=True, null=True, verbose_name='Details in Markdown')),
                ('programmatic_key', models.CharField(blank=True, max_length=100, null=True)),
                ('programmatic_details_md', models.TextField(blank=True, null=True, verbose_name='Programmatic details in Markdown')),
            ],
            options={
                'verbose_name': 'Company-phonenumber types',
                'verbose_name_plural': 'Company-phonenumber types',
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('last_visited_okay', models.DateTimeField(blank=True, default=None, null=True)),
                ('link', models.URLField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LinkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('details_md', models.TextField(blank=True, null=True, verbose_name='Details in Markdown')),
                ('programmatic_key', models.CharField(blank=True, max_length=100, null=True)),
                ('programmatic_details_md', models.TextField(blank=True, null=True, verbose_name='Programmatic details in Markdown')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('given_name', models.CharField(blank=True, max_length=100, null=True)),
                ('family_name', models.CharField(blank=True, max_length=100, null=True)),
                ('notes_md', models.TextField(blank=True, null=True, verbose_name='Notes in Markdown')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonAddressType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('details_md', models.TextField(blank=True, null=True, verbose_name='Details in Markdown')),
                ('programmatic_key', models.CharField(blank=True, max_length=100, null=True)),
                ('programmatic_details_md', models.TextField(blank=True, null=True, verbose_name='Programmatic details in Markdown')),
            ],
            options={
                'verbose_name': 'Person-address type',
                'verbose_name_plural': 'Person-address types',
            },
        ),
        migrations.CreateModel(
            name='PersonCompanyType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('details_md', models.TextField(blank=True, null=True, verbose_name='Details in Markdown')),
                ('programmatic_key', models.CharField(blank=True, max_length=100, null=True)),
                ('programmatic_details_md', models.TextField(blank=True, null=True, verbose_name='Programmatic details in Markdown')),
            ],
            options={
                'verbose_name': 'Person-company type',
                'verbose_name_plural': 'Person-company types',
            },
        ),
        migrations.CreateModel(
            name='PersonEmailType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('details_md', models.TextField(blank=True, null=True, verbose_name='Details in Markdown')),
                ('programmatic_key', models.CharField(blank=True, max_length=100, null=True)),
                ('programmatic_details_md', models.TextField(blank=True, null=True, verbose_name='Programmatic details in Markdown')),
            ],
            options={
                'verbose_name': 'Person-email type',
                'verbose_name_plural': 'Person-email types',
            },
        ),
        migrations.CreateModel(
            name='PersonLinkType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('details_md', models.TextField(blank=True, null=True, verbose_name='Details in Markdown')),
                ('programmatic_key', models.CharField(blank=True, max_length=100, null=True)),
                ('programmatic_details_md', models.TextField(blank=True, null=True, verbose_name='Programmatic details in Markdown')),
            ],
            options={
                'verbose_name': 'Person-link type',
                'verbose_name_plural': 'Person-link types',
            },
        ),
        migrations.CreateModel(
            name='PersonPhoneNumberType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('details_md', models.TextField(blank=True, null=True, verbose_name='Details in Markdown')),
                ('programmatic_key', models.CharField(blank=True, max_length=100, null=True)),
                ('programmatic_details_md', models.TextField(blank=True, null=True, verbose_name='Programmatic details in Markdown')),
            ],
            options={
                'verbose_name': 'Person-phonenumber type',
                'verbose_name_plural': 'Person-phonenumber types',
            },
        ),
        migrations.CreateModel(
            name='PhoneNumberType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('details_md', models.TextField(blank=True, null=True, verbose_name='Details in Markdown')),
                ('programmatic_key', models.CharField(blank=True, max_length=100, null=True)),
                ('programmatic_details_md', models.TextField(blank=True, null=True, verbose_name='Programmatic details in Markdown')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('country_code', models.PositiveIntegerField()),
                ('national_number', models.PositiveIntegerField()),
                ('types', models.ManyToManyField(blank=True, related_name='phone_numbers', related_query_name='phone_numbers', to='relationships.PhoneNumber')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonPhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('details_md', models.TextField(verbose_name='Details in Markdown')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person_phonenumber_relationships', related_query_name='person_phonenumber_relationships', to='relationships.Person')),
                ('phone_number', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person_phonenumber_relationships', related_query_name='person_phonenumber_relationships', to='relationships.PhoneNumber')),
                ('rtype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person_phonenumber_relationships', related_query_name='person_phonenumber_relationships', to='relationships.PersonPhoneNumberType', verbose_name='Person-phonenumber relationship type')),
            ],
            options={
                'verbose_name': 'Person-phonenumber',
                'verbose_name_plural': 'Person-phonenumbers',
            },
        ),
        migrations.CreateModel(
            name='PersonLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('details_md', models.TextField(verbose_name='Details in Markdown')),
                ('link', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person_link_relationships', related_query_name='person_link_relationships', to='relationships.Link')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person_link_relationships', related_query_name='person_link_relationships', to='relationships.Person')),
                ('rtype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person_link_relationships', related_query_name='person_link_relationships', to='relationships.PersonLinkType', verbose_name='Person-link relationship type')),
            ],
            options={
                'verbose_name': 'Person-link',
                'verbose_name_plural': 'Person-links',
            },
        ),
        migrations.CreateModel(
            name='PersonEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('details_md', models.TextField(verbose_name='Details in Markdown')),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person_email_relationships', related_query_name='person_email_relationships', to='relationships.Email')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person_email_relationships', related_query_name='person_email_relationships', to='relationships.Person')),
                ('rtype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person_email_relationships', related_query_name='person_email_relationships', to='relationships.PersonEmailType', verbose_name='Person-email relationship type')),
            ],
            options={
                'verbose_name': 'Person-email',
                'verbose_name_plural': 'Person-emails',
            },
        ),
        migrations.CreateModel(
            name='PersonCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('details_md', models.TextField(verbose_name='Details in Markdown')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='companies', related_query_name='companies', to='relationships.Company')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='persons', related_query_name='persons', to='relationships.Person')),
                ('rtype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person_company_relationships', related_query_name='person_company_relationships', to='relationships.PersonCompanyType', verbose_name='Person-company relationship type')),
            ],
            options={
                'verbose_name': 'Person-company',
                'verbose_name_plural': 'Person-companies',
            },
        ),
        migrations.CreateModel(
            name='PersonAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('details_md', models.TextField(verbose_name='Details in Markdown')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person_address_relationships', related_query_name='person_address_relationships', to='relationships.Address')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person_address_relationships', related_query_name='person_address_relationships', to='relationships.Person')),
                ('rtype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person_address_relationships', related_query_name='person_address_relationships', to='relationships.PersonAddressType', verbose_name='Person-address relationship type')),
            ],
            options={
                'verbose_name': 'Person-address',
                'verbose_name_plural': 'Person-addresses',
            },
        ),
        migrations.AddField(
            model_name='person',
            name='addresses',
            field=models.ManyToManyField(related_name='persons', related_query_name='persons', through='relationships.PersonAddress', to='relationships.Address'),
        ),
        migrations.AddField(
            model_name='person',
            name='companies',
            field=models.ManyToManyField(related_name='persons', related_query_name='persons', through='relationships.PersonCompany', to='relationships.Company'),
        ),
        migrations.AddField(
            model_name='person',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='persons', related_query_name='persons', to='common.Country'),
        ),
        migrations.AddField(
            model_name='person',
            name='emails',
            field=models.ManyToManyField(related_name='persons', related_query_name='persons', through='relationships.PersonEmail', to='relationships.Email'),
        ),
        migrations.AddField(
            model_name='person',
            name='links',
            field=models.ManyToManyField(related_name='persons', related_query_name='persons', through='relationships.PersonLink', to='relationships.Link'),
        ),
        migrations.AddField(
            model_name='person',
            name='phone_numbers',
            field=models.ManyToManyField(related_name='persons', related_query_name='persons', through='relationships.PersonPhoneNumber', to='relationships.PhoneNumber'),
        ),
        migrations.AddField(
            model_name='person',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='persons', related_query_name='persons', to='common.State'),
        ),
        migrations.AddField(
            model_name='link',
            name='types',
            field=models.ManyToManyField(blank=True, related_name='links', related_query_name='links', to='relationships.LinkType'),
        ),
        migrations.CreateModel(
            name='CompanyPhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('details_md', models.TextField(verbose_name='Details in Markdown')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='company_phonenumber_relationships', related_query_name='company_phonenumber_relationships', to='relationships.Company')),
                ('phone_number', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='company_phonenumber_relationships', related_query_name='company_phonenumber_relationships', to='relationships.PhoneNumber')),
                ('rtype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='company_phonenumber_relationships', related_query_name='company_phonenumber_relationships', to='relationships.CompanyPhoneNumberType', verbose_name='Company-phonenumber relationship type')),
            ],
            options={
                'verbose_name': 'Company-phonenumber',
                'verbose_name_plural': 'Company-phonenumbers',
            },
        ),
        migrations.CreateModel(
            name='CompanyLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('details_md', models.TextField(verbose_name='Details in Markdown')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='company_link_relationships', related_query_name='company_link_relationships', to='relationships.Company')),
                ('link', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='company_link_relationships', related_query_name='company_link_relationships', to='relationships.Link')),
                ('rtype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='company_link_relationships', related_query_name='company_link_relationships', to='relationships.CompanyLinkType', verbose_name='Company-link relationship type')),
            ],
            options={
                'verbose_name': 'Company-link',
                'verbose_name_plural': 'Company-links',
            },
        ),
        migrations.CreateModel(
            name='CompanyEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('details_md', models.TextField(verbose_name='Details in Markdown')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='company_email_relationships', related_query_name='company_email_relationships', to='relationships.Company')),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='company_email_relationships', related_query_name='company_email_relationships', to='relationships.Email')),
                ('rtype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='company_email_relationships', related_query_name='company_email_relationships', to='relationships.CompanyEmailType', verbose_name='Company-email relationship type')),
            ],
            options={
                'verbose_name': 'Company-email',
                'verbose_name_plural': 'Company-emails',
            },
        ),
        migrations.CreateModel(
            name='CompanyAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('deleted', models.DateTimeField(blank=True, default=None, null=True)),
                ('details_md', models.TextField(verbose_name='Details in Markdown')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='company_address_relationships', related_query_name='company_address_relationships', to='relationships.Address')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='company_address_relationships', related_query_name='company_address_relationships', to='relationships.Company')),
                ('rtype', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='company_address_relationships', related_query_name='company_address_relationships', to='relationships.CompanyAddressType', verbose_name='Company-address relationship type')),
            ],
            options={
                'verbose_name': 'Company-address',
                'verbose_name_plural': 'Company-addresses',
            },
        ),
        migrations.AddField(
            model_name='company',
            name='addresses',
            field=models.ManyToManyField(related_name='companies', related_query_name='companies', through='relationships.CompanyAddress', to='relationships.Address'),
        ),
        migrations.AddField(
            model_name='company',
            name='emails',
            field=models.ManyToManyField(related_name='companies', related_query_name='companies', through='relationships.CompanyEmail', to='relationships.Email'),
        ),
        migrations.AddField(
            model_name='company',
            name='links',
            field=models.ManyToManyField(related_name='companies', related_query_name='companies', through='relationships.CompanyLink', to='relationships.Link'),
        ),
        migrations.AddField(
            model_name='company',
            name='phone_numbers',
            field=models.ManyToManyField(related_name='companies', related_query_name='companies', through='relationships.CompanyPhoneNumber', to='relationships.PhoneNumber'),
        ),
        migrations.AddField(
            model_name='address',
            name='types',
            field=models.ManyToManyField(blank=True, related_name='addresses', related_query_name='addresses', to='relationships.AddressType'),
        ),
    ]
